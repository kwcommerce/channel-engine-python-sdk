# coding: utf-8

"""
    ChannelEngine Merchant API

    ChannelEngine API for merchants

    The version of the OpenAPI document: 2.14.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.merchant_cancellation_request import MerchantCancellationRequest

class TestMerchantCancellationRequest(unittest.TestCase):
    """MerchantCancellationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MerchantCancellationRequest:
        """Test MerchantCancellationRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MerchantCancellationRequest`
        """
        model = MerchantCancellationRequest()
        if include_optional:
            return MerchantCancellationRequest(
                merchant_cancellation_no = '',
                merchant_order_no = '',
                lines = [
                    openapi_client.models.merchant_cancellation_line_request.MerchantCancellationLineRequest(
                        merchant_product_no = '', 
                        quantity = 0, )
                    ],
                reason = '',
                reason_code = 'NOT_IN_STOCK'
            )
        else:
            return MerchantCancellationRequest(
                merchant_cancellation_no = '',
                merchant_order_no = '',
                lines = [
                    openapi_client.models.merchant_cancellation_line_request.MerchantCancellationLineRequest(
                        merchant_product_no = '', 
                        quantity = 0, )
                    ],
        )
        """

    def testMerchantCancellationRequest(self):
        """Test MerchantCancellationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
