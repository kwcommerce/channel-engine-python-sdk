# coding: utf-8

"""
    ChannelEngine Merchant API

    ChannelEngine API for merchants

    The version of the OpenAPI document: 2.14.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing import List, Optional
from typing_extensions import Annotated
from openapi_client.models.collection_of_merchant_product_with_buy_box_price import CollectionOfMerchantProductWithBuyBoxPrice

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class CompetitionPriceApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def competition_prices_get_buy_box_prices(
        self,
        channel_id: Annotated[Optional[StrictInt], Field(description="The id of the channel")] = None,
        gtin_list: Annotated[Optional[List[StrictStr]], Field(description="Search products by submitting a list of GTIN's. (optional)<br />Max. 2000.")] = None,
        sku_list: Annotated[Optional[List[StrictStr]], Field(description="Search products by submitting a list of Sku's. (optional)<br />Max. 2000. If GtinList is already set, this one is ignored.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="The page to filter on. Starts at 1.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CollectionOfMerchantProductWithBuyBoxPrice:
        """Gets the price from the buy box winner

        Gets the current price of the buy box winner per product for a marketplace.

        :param channel_id: The id of the channel
        :type channel_id: int
        :param gtin_list: Search products by submitting a list of GTIN's. (optional)<br />Max. 2000.
        :type gtin_list: List[str]
        :param sku_list: Search products by submitting a list of Sku's. (optional)<br />Max. 2000. If GtinList is already set, this one is ignored.
        :type sku_list: List[str]
        :param page: The page to filter on. Starts at 1.
        :type page: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._competition_prices_get_buy_box_prices_serialize(
            channel_id=channel_id,
            gtin_list=gtin_list,
            sku_list=sku_list,
            page=page,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CollectionOfMerchantProductWithBuyBoxPrice",
            '400': "ApiResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def competition_prices_get_buy_box_prices_with_http_info(
        self,
        channel_id: Annotated[Optional[StrictInt], Field(description="The id of the channel")] = None,
        gtin_list: Annotated[Optional[List[StrictStr]], Field(description="Search products by submitting a list of GTIN's. (optional)<br />Max. 2000.")] = None,
        sku_list: Annotated[Optional[List[StrictStr]], Field(description="Search products by submitting a list of Sku's. (optional)<br />Max. 2000. If GtinList is already set, this one is ignored.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="The page to filter on. Starts at 1.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CollectionOfMerchantProductWithBuyBoxPrice]:
        """Gets the price from the buy box winner

        Gets the current price of the buy box winner per product for a marketplace.

        :param channel_id: The id of the channel
        :type channel_id: int
        :param gtin_list: Search products by submitting a list of GTIN's. (optional)<br />Max. 2000.
        :type gtin_list: List[str]
        :param sku_list: Search products by submitting a list of Sku's. (optional)<br />Max. 2000. If GtinList is already set, this one is ignored.
        :type sku_list: List[str]
        :param page: The page to filter on. Starts at 1.
        :type page: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._competition_prices_get_buy_box_prices_serialize(
            channel_id=channel_id,
            gtin_list=gtin_list,
            sku_list=sku_list,
            page=page,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CollectionOfMerchantProductWithBuyBoxPrice",
            '400': "ApiResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def competition_prices_get_buy_box_prices_without_preload_content(
        self,
        channel_id: Annotated[Optional[StrictInt], Field(description="The id of the channel")] = None,
        gtin_list: Annotated[Optional[List[StrictStr]], Field(description="Search products by submitting a list of GTIN's. (optional)<br />Max. 2000.")] = None,
        sku_list: Annotated[Optional[List[StrictStr]], Field(description="Search products by submitting a list of Sku's. (optional)<br />Max. 2000. If GtinList is already set, this one is ignored.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="The page to filter on. Starts at 1.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets the price from the buy box winner

        Gets the current price of the buy box winner per product for a marketplace.

        :param channel_id: The id of the channel
        :type channel_id: int
        :param gtin_list: Search products by submitting a list of GTIN's. (optional)<br />Max. 2000.
        :type gtin_list: List[str]
        :param sku_list: Search products by submitting a list of Sku's. (optional)<br />Max. 2000. If GtinList is already set, this one is ignored.
        :type sku_list: List[str]
        :param page: The page to filter on. Starts at 1.
        :type page: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._competition_prices_get_buy_box_prices_serialize(
            channel_id=channel_id,
            gtin_list=gtin_list,
            sku_list=sku_list,
            page=page,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CollectionOfMerchantProductWithBuyBoxPrice",
            '400': "ApiResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _competition_prices_get_buy_box_prices_serialize(
        self,
        channel_id,
        gtin_list,
        sku_list,
        page,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'gtinList': 'multi',
            'skuList': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if channel_id is not None:
            
            _query_params.append(('channelId', channel_id))
            
        if gtin_list is not None:
            
            _query_params.append(('gtinList', gtin_list))
            
        if sku_list is not None:
            
            _query_params.append(('skuList', sku_list))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKey'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v2/competitionprices/buyboxprices',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


